<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yokior.team.mapper.QaUserTeamMapper">

    <resultMap type="QaUserTeam" id="QaUserTeamResult">
        <result property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="teamId" column="team_id"/>
        <result property="role" column="role"/>
        <result property="joinTime" column="join_time"/>
    </resultMap>

    <resultMap type="QaTeamVo" id="QaTeamVoResult">
        <result property="teamId" column="team_id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="avatar" column="avatar"/>
        <result property="ownerUserName" column="owner_name"/>
        <result property="role" column="role"/>
        <result property="joinTime" column="join_time"/>
    </resultMap>

    <resultMap type="TeamMemberVo" id="TeamMemberVoResult">
        <result property="userId" column="user_id"/>
        <result property="avatar" column="avatar"/>
        <result property="nickName" column="nick_name"/>
        <result property="role" column="role"/>
        <result property="joinTime" column="join_time"/>
    </resultMap>

    <sql id="selectQaUserTeamVo">
        select id, user_id, team_id, role, join_time
        from qa_user_team
    </sql>

    <select id="selectQaUserTeamList" parameterType="QaUserTeamDto" resultMap="QaTeamVoResult">
        SELECT
        qt.team_id,
        qt.name,
        qt.description,
        qt.avatar,
        qut.role,
        su.user_name AS owner_name,
        qut.join_time
        FROM
        qa_team qt
        INNER JOIN qa_user_team qut ON qt.team_id = qut.team_id
        INNER JOIN sys_user su ON su.user_id = qt.owner_user_id
        <where>
            qt.status = '0'
            AND qut.user_id = #{userId}
            <if test="name != null and name != ''">
                AND qt.name like concat('%',#{name},'%')
            </if>
            <if test="role != null and role != ''">
                AND qut.role = #{role}
            </if>
        </where>
    </select>

    <select id="selectQaUserTeamById" parameterType="Long" resultMap="QaUserTeamResult">
        <include refid="selectQaUserTeamVo"/>
        where id = #{id}
    </select>

    <select id="selectQaUserTeamByTeamIdAndUserId" resultMap="QaTeamVoResult">
        SELECT qt.team_id,
               qt.name,
               qt.description,
               qt.avatar,
               qut.role,
               su.user_name AS owner_name,
               qut.join_time
        FROM qa_team qt
                 INNER JOIN qa_user_team qut ON qt.team_id = qut.team_id
                 INNER JOIN sys_user su ON su.user_id = qt.owner_user_id
        WHERE qt.status = '0'
          AND qt.team_id = #{teamId}
          AND qut.user_id = #{userId}
    </select>

    <select id="selectTeamMemberByTeamId" resultMap="TeamMemberVoResult">
        select su.user_id, su.avatar, su.nick_name, qut.role, qut.join_time
        from qa_user_team qut
                 inner join sys_user su on su.user_id = qut.user_id
        where qut.team_id = #{teamId}
    </select>

    <select id="selectTeamMember" resultMap="TeamMemberVoResult">
        select su.user_id, su.avatar, su.nick_name, qut.role, qut.join_time
        from qa_user_team qut
        inner join sys_user su on su.user_id = qut.user_id
        <where>
            qut.team_id = #{dto.teamId}
            <if test="dto.name != null and dto.name != ''">
                and su.nick_name like concat('%',#{dto.name},'%')
            </if>
            <if test="dto.role != null and dto.role != ''">
                and qut.role = #{dto.role}
            </if>
        </where>
    </select>

    <select id="getTeamCreatorId" resultType="java.lang.Long">
        select user_id
        from qa_user_team qut
        where team_id = #{teamId}
        and role = 'creator'
    </select>
    <select id="isUserInTeam" resultType="java.lang.Boolean">
        select count(1) > 0
        from qa_user_team qut
        where team_id = #{teamId}
        and user_id = #{userId}
    </select>

    <insert id="insertQaUserTeam" parameterType="QaUserTeam" useGeneratedKeys="true" keyProperty="id">
        insert into qa_user_team
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="teamId != null">team_id,</if>
            <if test="role != null and role != ''">role,</if>
            <if test="joinTime != null">join_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="teamId != null">#{teamId},</if>
            <if test="role != null and role != ''">#{role},</if>
            <if test="joinTime != null">#{joinTime},</if>
        </trim>
    </insert>

    <update id="updateQaUserTeam" parameterType="QaUserTeam">
        update qa_user_team
        <trim prefix="SET" suffixOverrides=",">
            <if test="role != null and role != ''">role = #{role},</if>
        </trim>
        <where>
            <if test="id != null"> and id = #{id}</if>
            <if test="userId != null"> and user_id = #{userId}</if>
            <if test="teamId != null"> and team_id = #{teamId}</if>
        </where>
    </update>

    <delete id="deleteQaUserTeamByTeamId" parameterType="Long">
        delete
        from qa_user_team
        where team_id = #{teamId}
    </delete>

    <delete id="deleteQaUserTeamByTeamIds">
        delete from qa_user_team where team_id in
        <foreach item="teamId" collection="teamIds" open="(" separator="," close=")">
            #{teamId}
        </foreach>
    </delete>

    <delete id="deleteMember">
        delete
        from qa_user_team
        where team_id = #{teamId} and user_id = #{userId}
    </delete>
</mapper>